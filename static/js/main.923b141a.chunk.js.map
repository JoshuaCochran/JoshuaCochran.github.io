{"version":3,"sources":["features/user/userSlice.js","features/user/LogoutButton.js","features/header/Header.js","features/cards/cardsSlice.js","features/cards/DeleteCardButton.js","features/cards/RenameForm.js","features/cards/Card.js","features/cards/CardList.js","features/cards/AddCardButton.js","selectors/CardSelectors.js","features/lists/listsSlice.js","features/menus/ListOptionsMenuMain.js","selectors/BoardSelectors.js","features/menus/MoveListMenu.js","features/menus/ListOptionsMenu.js","features/lists/ListOptionsDropDown.js","features/lists/RenameListForm.js","features/lists/List.js","features/lists/AddListButton.js","selectors/ListSelectors.js","features/lists/ListList.js","features/boards/boardsSlice.js","features/boards/DeleteBoardButton.js","features/boards/RenameBoardForm.js","features/boards/BoardHeader.js","features/boards/Board.js","features/boards/AddBoardButton.js","features/boards/BoardButton.js","features/boards/BoardList.js","features/router/LoggedInRouter.js","features/user/LoginForm.js","features/user/LoginFormWrapper.js","features/user/RegistrationForm.js","features/user/RegistrationFormWrapper.js","features/router/LoggedOutRouter.js","selectors/UserSelectors.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["userSlice","createSlice","name","initialState","reducers","addUser","reducer","state","action","payload","username","email","token","prepare","deleteUser","actions","confirm","Modal","buttonStyle","display","position","marginRight","width","height","padding","mapDispatch","logout","dispatch","axios","get","then","res","Cookies","remove","path","catch","err","console","log","connect","onClick","content","onOk","onCancel","style","shape","icon","headerStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","justifyContent","flexGrow","lineHeight","maxHeight","leftButtonContainer","rightButtonContainer","Header","to","cardsSlice","addCard","owner","id","listId","title","description","deleteCard","orderedCards","Object","keys","map","key","push","sort","a","b","splice","forEach","cardArray","i","data","put","delete","renameCards","reorderCards","oldListId","newListId","oldPosition","newPosition","orderedOldCards","orderedNewCards","removed","result","moveCard","moveCards","color","textAlign","boxShadow","borderColor","cardId","showConfirm","inputStyle","minHeight","setFormVisible","useState","cardTitle","setCardTitle","layout","onSubmit","e","preventDefault","trim","Item","value","onChange","target","type","placeholder","autoFocus","cardStyle","borderRadius","zIndex","marginBottom","maxWidth","bodyStyle","Card","buttonVisible","setButtonVisible","formVisible","wrapperRef","useRef","useEffect","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","draggableId","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","CardList","cards","values","card","buttonContainer","flexDirection","alignContent","submitButtonStyle","backgroundColor","closeButtonStyle","minWidth","addButtonStyle","postCard","post","_id","isVisible","setIsVisible","fromDropDown","filter","length","getNumCards","TextArea","autoSize","htmlType","block","ghost","listsSlice","addList","boardId","deleteList","orderedLists","listArray","renameList","moveList","newBoardId","reorderLists","menuStyle","overflow","dividerStyle","margin","headerTitle","textOverflow","whiteSpace","menuGroupStyle","overflowX","overflowY","menuItemStyle","cursor","fontWeight","textDecoration","handleClick","setShowingMoveList","Divider","ItemGroup","getActiveBoard","find","isActive","getId","getPosition","Option","Select","alignItems","selectStyle","left","border","labelStyle","fontSize","boards","lists","selectedBoard","setSelectedBoard","selectedPosition","setSelectedPosition","defaultValue","ListOptionsMenu","showingMoveList","ellipsisStyle","float","ListOptionsDropDown","overlay","trigger","placement","listTitle","setListTitle","listWrapper","boxSizing","verticalAlign","marginLeft","listContent","listHeader","flex","justify","titleStyle","List","isTopVisible","setIsTopVisible","isBotVisible","setIsBotVisible","isFormVisible","provided1","droppableId","formStyle","postList","list","showingInput","setShowingInput","getNumLists","scrollingWrapper","flexWrap","fetchLists","fetchCards","boardsSlice","addBoard","isPrivate","deleteBoard","renameBoard","setActive","fetchBoards","board","showReallyConfirm","okText","cancelText","boardTitle","setBoardTitle","onDragEnd","source","destination","direction","postBoard","wordWrap","buttonContainerStyle","user","LoggedInRouter","basename","exact","render","props","match","params","marginTop","LoginForm","Form","create","getFieldDecorator","form","className","rules","required","message","prefix","login","password","defaults","headers","common","set","formRef","setFormRef","saveFormRef","useCallback","node","validateFields","resetFields","RegistrationForm","validator","rule","callback","force","getFieldValue","register","LoggedOutRouter","isLoggedIn","layoutStyle","fontFamily","contentStyle","fetchUserDetails","baseURL","Content","Boolean","window","location","hostname","combineReducers","cardsReducer","listsReducer","boardsReducer","userReducer","store","configureStore","rootReducer","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.923b141a.chunk.js","sourcesContent":["import { createSlice } from \"redux-starter-kit\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {},\r\n  reducers: {\r\n    addUser: {\r\n      reducer(state, action) {\r\n        const { username, email, token } = action.payload;\r\n        state[0] = { username, email, token };\r\n      },\r\n      prepare(username, email, token) {\r\n        return { payload: { username, email, token } };\r\n      }\r\n    },\r\n    deleteUser: {\r\n      reducer(state, action) {\r\n        delete state[0];\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addUser, deleteUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const fetchUserDetails = token => dispatch => {\r\n  if (token)\r\n    axios.get(\"users/me\").then(res => {\r\n      dispatch(addUser(res.data.username, res.data.email, token));\r\n    });\r\n};\r\n\r\nexport const login = (email, password) => dispatch => {\r\n  const data = {\r\n    email: email,\r\n    password: password\r\n  };\r\n\r\n  axios\r\n    .post(\"users/login\", data)\r\n    .then(res => {\r\n      axios.defaults.headers.common[\"Authorization\"] =\r\n        \"Bearer \" + res.data.token;\r\n      dispatch(\r\n        addUser(res.data.user.username, res.data.user.email, res.data.token)\r\n      );\r\n      const cookies = new Cookies();\r\n      cookies.set(\"trelloc token\", res.data.token, { path: \"/\" });\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Login error!\");\r\n    });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  axios\r\n    .get(\"users/me/logout\")\r\n    .then(res => {\r\n      const cookies = new Cookies();\r\n      cookies.remove(\"trelloc token\", { path: \"/\" });\r\n      dispatch(deleteUser());\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Logout error!\");\r\n    });\r\n};\r\n\r\nexport const register = (username, email, password) => dispatch => {\r\n  const data = {\r\n    username: username,\r\n    email: email,\r\n    password: password\r\n  };\r\n\r\n  axios\r\n    .post(\"users/\", data)\r\n    .then(res => {\r\n      dispatch(\r\n        addUser(res.data.user.username, res.data.user.email, res.data.token)\r\n      );\r\n      const cookies = new Cookies();\r\n      cookies.set(\"trelloc token\", res.data.token, { path: \"/\" });\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Registration error!\");\r\n    });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"./userSlice\";\r\nimport { Button, Modal } from \"antd\";\r\nconst { confirm } = Modal;\r\n\r\nconst buttonStyle = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  marginRight: \"4px\",\r\n  width: \"32px\",\r\n  height: \"32px\",\r\n  padding: 0\r\n};\r\n\r\nconst LogoutButton = ({ logout }) => {\r\n  const showConfirm = () => {\r\n    confirm({\r\n      content: \"Are you sure you want to log out?\",\r\n      onOk() {\r\n        logout();\r\n      },\r\n      onCancel() {}\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      onClick={showConfirm}\r\n      style={buttonStyle}\r\n      shape=\"circle\"\r\n      icon=\"logout\"\r\n    />\r\n  );\r\n};\r\n\r\nconst mapDispatch = { logout };\r\n\r\nexport default connect(null, mapDispatch)(LogoutButton);\r\n","import React from \"react\";\r\nimport { Layout, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LogoutButton from \"../user/LogoutButton\";\r\n\r\nconst headerStyle = {\r\n  backgroundImage:\r\n    \"url(https://a.trellocdn.com/prgb/dist/images/header-logo-2x.01ef898811a879595cea.png)\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundPosition: \"center center\",\r\n  backgroundSize: \"80px 30px\",\r\n  height: \"40px\",\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  flexGrow: 1,\r\n  padding: \"4px\",\r\n  lineHeight: \"0\",\r\n  maxHeight: \"40px\"\r\n};\r\n\r\nconst leftButtonContainer = {\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  flexGrow: 1\r\n};\r\n\r\nconst rightButtonContainer = {\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n  flexGrow: 1\r\n};\r\n\r\nconst buttonStyle = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  marginRight: \"4px\",\r\n  width: \"32px\",\r\n  height: \"32px\",\r\n  padding: 0\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Layout.Header style={headerStyle}>\r\n      <div style={leftButtonContainer}>\r\n        <Link to=\"/\">\r\n          <Button style={buttonStyle} icon=\"home\" />\r\n        </Link>\r\n      </div>\r\n      <div style={rightButtonContainer}>\r\n        <LogoutButton />\r\n      </div>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createSlice } from \"redux-starter-kit\";\r\nimport axios from \"axios\";\r\n\r\nconst cardsSlice = createSlice({\r\n  name: \"cards\",\r\n  initialState: {},\r\n  reducers: {\r\n    addCard: {\r\n      reducer(state, action) {\r\n        const {\r\n          owner,\r\n          id,\r\n          listId,\r\n          title,\r\n          description,\r\n          position\r\n        } = action.payload;\r\n\r\n        state[id] = { owner, id, listId, title, description, position };\r\n      },\r\n      prepare(owner, id, listId, title, description, position) {\r\n        return {\r\n          payload: { owner, id, listId, title, description, position }\r\n        };\r\n      }\r\n    },\r\n    deleteCard: {\r\n      reducer(state, action) {\r\n        const id = action.payload;\r\n        const listId = state[id].listId;\r\n\r\n        let orderedCards = [];\r\n        Object.keys(state).map(key => {\r\n          if (state[key].listId === state[id].listId)\r\n            orderedCards.push([state[key], key]);\r\n        });\r\n\r\n        orderedCards.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        const [removed] = orderedCards.splice(state[id].position, 1);\r\n        delete state[id];\r\n\r\n        orderedCards.forEach((cardArray, i) => {\r\n          state[cardArray[1]].position = i;\r\n        });\r\n\r\n        Object.keys(state).map(key => {\r\n          if (state[key].listId === listId) {\r\n            const data = {\r\n              listId: state[key].listId,\r\n              title: state[key].title,\r\n              position: state[key].position\r\n            };\r\n            axios.put(\"cards/\" + state[key].id, data).catch(err => {\r\n              console.log(\"Error in reorderCards!\");\r\n            });\r\n          }\r\n        });\r\n\r\n        axios.delete(\"cards/\" + id).catch(err => {\r\n          console.log(\"Error in deleteCard!\");\r\n        });\r\n      }\r\n    },\r\n    renameCards: {\r\n      reducer(state, action) {\r\n        const { id, title } = action.payload;\r\n\r\n        state[id].title = title;\r\n\r\n        const data = {\r\n          title: state[id].title\r\n        };\r\n        axios.put(\"cards/\" + id, data).catch(err => {\r\n          console.log(\"Error in renameCards!\");\r\n        });\r\n      },\r\n      prepare(id, title) {\r\n        return {\r\n          payload: { id: id, title: title }\r\n        };\r\n      }\r\n    },\r\n    reorderCards: {\r\n      reducer(state, action) {\r\n        const {\r\n          id,\r\n          oldListId,\r\n          newListId,\r\n          oldPosition,\r\n          newPosition\r\n        } = action.payload;\r\n\r\n        // First we make two arrays.\r\n        let orderedOldCards = [];\r\n        let orderedNewCards = [];\r\n        Object.keys(state).map(key => {\r\n          // In the first array we put all the cards from the source list\r\n          if (state[key].listId === oldListId)\r\n            orderedOldCards.push([state[key], key]);\r\n          // In the second we put all the cards from the destination list\r\n          else if (state[key].listId === newListId)\r\n            orderedNewCards.push([state[key], key]);\r\n        });\r\n        // Then we sort both by the position of their elements\r\n        orderedOldCards.sort((a, b) => a[0].position - b[0].position);\r\n        orderedNewCards.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        // If the card is moving within its original list\r\n        if (state[id].listId === newListId) {\r\n          // First we remove the card from the list\r\n          const [removed] = orderedOldCards.splice(oldPosition, 1);\r\n          // Then we splice it back in at its new position\r\n          orderedOldCards.splice(newPosition, 0, removed);\r\n          // Now, we update the state with the new card positions\r\n          // We didn't actually change any .position elements, but they are sorted by index\r\n          // So we simply update the position of the cards in state to match their index in orderedOldCards\r\n          orderedOldCards.forEach((cardArray, i) => {\r\n            state[cardArray[1]].position = i;\r\n          });\r\n        } else {\r\n          // If the card is moving between lists we do pretty much the same thing\r\n          const result = orderedOldCards;\r\n          const [removed] = result.splice(oldPosition, 1);\r\n          // We just skip the step where we put the card back in a new position in the source list\r\n          result.forEach((cardArray, i) => {\r\n            state[cardArray[1]].position = i;\r\n          });\r\n          // and instead update its listId element in state to the id of the destination list\r\n          state[id].listId = newListId;\r\n\r\n          // Then splice the card into the orderedNewCards array we made earlier\r\n          orderedNewCards.splice(newPosition, 0, removed);\r\n          // and update the state\r\n          orderedNewCards.forEach((cardArray, i) => {\r\n            state[cardArray[1]].position = i;\r\n          });\r\n        }\r\n\r\n        Object.keys(state).map(key => {\r\n          if (\r\n            state[key].listId === oldListId ||\r\n            state[key].listId === newListId\r\n          ) {\r\n            const data = {\r\n              listId: state[key].listId,\r\n              title: state[key].title,\r\n              position: state[key].position\r\n            };\r\n            axios.put(\"cards/\" + state[key].id, data).catch(err => {\r\n              console.log(\"Error in reorderCards!\");\r\n            });\r\n          }\r\n        });\r\n      },\r\n      prepare(id, oldListId, newListId, oldPosition, newPosition) {\r\n        return {\r\n          payload: { id, oldListId, newListId, oldPosition, newPosition }\r\n        };\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  addCard,\r\n  deleteCard,\r\n  moveCard,\r\n  moveCards,\r\n  reorderCards,\r\n  renameCards\r\n} = cardsSlice.actions;\r\n\r\nexport default cardsSlice.reducer;\r\n\r\nexport const postCard = (listId, title, description, position) => dispatch => {\r\n  const data = {\r\n    listId: listId,\r\n    title: title,\r\n    description: \"\",\r\n    position: position\r\n  };\r\n  axios\r\n    .post(\"cards\", data)\r\n    .then(res => {\r\n      dispatch(\r\n        addCard(\r\n          res.data.owner,\r\n          res.data.card._id,\r\n          listId,\r\n          title,\r\n          description,\r\n          position\r\n        )\r\n      );\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Error in CreateCard!\");\r\n    });\r\n};\r\n\r\nexport const fetchCards = () => dispatch => {\r\n  axios.get(\"cards\").then(res => {\r\n    res.data.map(card => {\r\n      dispatch(\r\n        addCard(\r\n          card.owner,\r\n          card._id,\r\n          card.listId,\r\n          card.title,\r\n          card.description,\r\n          card.position\r\n        )\r\n      );\r\n    });\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"antd\";\r\nimport { deleteCard } from \"./cardsSlice\";\r\nimport { connect } from \"react-redux\";\r\nconst { confirm } = Modal;\r\n\r\nconst buttonStyle = {\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  height: \"14px\",\r\n  width: \"14px\",\r\n  borderColor: \"transparent\"\r\n};\r\n\r\nconst showConfirm = (cardId, deleteCard) => {\r\n  confirm({\r\n    content: \"Are you sure you want to delete this card?\",\r\n    onOk() {\r\n      deleteCard(cardId);\r\n    },\r\n    onCancel() {}\r\n  });\r\n};\r\n\r\nconst DeleteCardButton = ({ cardId, deleteCard }) => {\r\n  return (\r\n    <Button\r\n      icon=\"close\"\r\n      style={buttonStyle}\r\n      onClick={() => showConfirm(cardId, deleteCard)}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapDispatch = { deleteCard };\r\n\r\nexport default connect(null, mapDispatch)(DeleteCardButton);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Input } from \"antd\";\r\nimport { renameCards } from \"./cardsSlice\";\r\n\r\nconst inputStyle = {\r\n  maxHeight: \"162px\",\r\n  minHeight: \"20px\"\r\n};\r\n\r\nconst RenameForm = ({ id, title, setFormVisible, renameCards }) => {\r\n  const [cardTitle, setCardTitle] = useState(title);\r\n\r\n  const onChange = e => setCardTitle(e.target.value);\r\n  return (\r\n    <Form\r\n      layout=\"inline\"\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        if (!cardTitle.trim()) return;\r\n\r\n        renameCards(id, cardTitle);\r\n\r\n        setCardTitle(\"\");\r\n        setFormVisible(false);\r\n      }}\r\n    >\r\n      <Form.Item style={{ width: \"100%\" }}>\r\n        <Input\r\n          style={inputStyle}\r\n          value={cardTitle}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Enter a title for this card...\"\r\n          autoFocus={true}\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapDispatch = { renameCards };\r\n\r\nexport default connect(null, mapDispatch)(RenameForm);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { Card as AntdCard } from \"antd\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport DeleteCardButton from \"./DeleteCardButton\";\r\nimport RenameForm from \"./RenameForm\";\r\n\r\nconst cardStyle = {\r\n  borderRadius: \"3px\",\r\n  zIndex: 10,\r\n  boxShadow: \"0 1px 0 rgba(9, 30, 66, .25)\",\r\n  marginBottom: \"8px\",\r\n  minHeight: \"20px\",\r\n  maxWidth: \"300px\",\r\n  padding: \"0px !important\"\r\n};\r\n\r\nconst bodyStyle = {\r\n  padding: \"6px 8px\"\r\n};\r\n\r\nconst buttonStyle = {\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  maxWidth: \"calc(100% - 24px)\",\r\n  borderColor: \"transparent\",\r\n  marginRight: \"4px\"\r\n};\r\n\r\nconst Card = ({ id, position, title }) => {\r\n  const [buttonVisible, setButtonVisible] = useState(false);\r\n  const [formVisible, setFormVisible] = useState(false);\r\n  const wrapperRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = event => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setFormVisible(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Draggable key={id} draggableId={id} index={position} type=\"CARD\">\r\n      {(provided, snapshot) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <div ref={wrapperRef}>\r\n            <AntdCard\r\n              key={id}\r\n              style={cardStyle}\r\n              bodyStyle={bodyStyle}\r\n              onMouseEnter={() => setButtonVisible(true)}\r\n              onMouseLeave={() => setButtonVisible(false)}\r\n            >\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                {formVisible ? (\r\n                  <RenameForm\r\n                    id={id}\r\n                    title={title}\r\n                    setFormVisible={setFormVisible}\r\n                  />\r\n                ) : (\r\n                  title\r\n                )}\r\n                {buttonVisible && !formVisible ? (\r\n                  <div>\r\n                    <Button\r\n                      style={buttonStyle}\r\n                      icon=\"edit\"\r\n                      onClick={() => setFormVisible(true)}\r\n                    />\r\n                    <DeleteCardButton style={buttonStyle} cardId={id} />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </AntdCard>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ cards }) => {\r\n  return (\r\n    <div>\r\n      {Object.values(cards)\r\n        .sort(function(a, b) {\r\n          return a.position - b.position;\r\n        })\r\n        .map(card => (\r\n          <Card\r\n            key={card.id}\r\n            id={card.id}\r\n            position={card.position}\r\n            title={card.title}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postCard } from \"./cardsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { getNumCards } from \"../../selectors/CardSelectors\"\r\n\r\nconst inputStyle = {\r\n  maxHeight: \"162px\",\r\n  minHeight: \"54px\"\r\n};\r\n\r\nconst buttonContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  justifyContent: \"flex-start\",\r\n  alignContent: \"center\"\r\n};\r\n\r\nconst submitButtonStyle = {\r\n  minHeight: \"38px\",\r\n  maxHeight: \"38px\",\r\n  backgroundColor: \"#5aac44\",\r\n  color: \"white\"\r\n};\r\n\r\nconst closeButtonStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  height: \"38px\",\r\n  width: \"38px\",\r\n  minWidth: \"38px\"\r\n};\r\n\r\nconst addButtonStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\"\r\n};\r\n\r\nconst mapDispatch = { postCard };\r\n\r\nconst AddCardButton = ({\r\n  cards,\r\n  postCard,\r\n  listId,\r\n  isVisible,\r\n  setIsVisible,\r\n  fromDropDown\r\n}) => {\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n\r\n  const onChange = e => setCardTitle(e.target.value);\r\n\r\n  if (isVisible)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!cardTitle.trim()) return;\r\n\r\n          postCard(listId, cardTitle, \"\", getNumCards(cards, listId));\r\n\r\n          setCardTitle(\"\");\r\n          setIsVisible(false);\r\n        }}\r\n      >\r\n        <Form.Item style={{ width: \"100%\" }}>\r\n          <Input.TextArea\r\n            style={inputStyle}\r\n            value={cardTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a title for this card...\"\r\n            autoFocus={true}\r\n            autoSize={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <div style={buttonContainer}>\r\n            <Button htmlType=\"submit\" style={submitButtonStyle} block>\r\n              Add Card\r\n            </Button>\r\n            <Button\r\n              ghost={true}\r\n              onClick={() => {\r\n                setIsVisible(false);\r\n                setCardTitle(\"\");\r\n              }}\r\n              style={closeButtonStyle}\r\n              icon=\"close\"\r\n            />\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else if (!isVisible && !fromDropDown)\r\n    return (\r\n      <Button\r\n        block\r\n        ghost={true}\r\n        onClick={() => {\r\n          setIsVisible(true);\r\n        }}\r\n        style={addButtonStyle}\r\n        icon=\"plus\"\r\n      >\r\n        Add another card\r\n      </Button>\r\n    );\r\n  else return null;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.cards\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(AddCardButton);\r\n","export const getNumCards = (state, listId) => {\r\n    return Object.values(state).filter(card => card.listId === listId).length;\r\n  };\r\n  ","import { createSlice } from \"redux-starter-kit\";\r\nimport axios from \"axios\";\r\n\r\nconst listsSlice = createSlice({\r\n  name: \"lists\",\r\n  initialState: {},\r\n  reducers: {\r\n    addList: {\r\n      reducer(state, action) {\r\n        const { owner, id, boardId, title, position } = action.payload;\r\n\r\n        state[id] = { owner, id, boardId, title, position };\r\n      },\r\n      prepare(owner, id, boardId, title, position) {\r\n        return { payload: { owner, id, boardId, title, position } };\r\n      }\r\n    },\r\n    deleteList: {\r\n      reducer(state, action) {\r\n        const id = action.payload;\r\n        const boardId = state[id].boardId;\r\n\r\n        let orderedLists = [];\r\n        Object.keys(state).map(key => {\r\n          if (state[key].boardId === boardId)\r\n            orderedLists.push([state[key], key]);\r\n        });\r\n        orderedLists.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        orderedLists.splice(state[id].position, 1);\r\n        delete state[id];\r\n\r\n        orderedLists.forEach((listArray, i) => {\r\n          state[listArray[1]].position = i;\r\n        });\r\n\r\n        Object.keys(state).map(key => {\r\n          if (state[key].boardId === boardId) {\r\n            const data = {\r\n              boardId: state[key].boardId,\r\n              title: state[key].title,\r\n              position: state[key].position\r\n            };\r\n            axios.put(\"lists/\" + state[key].id, data).catch(err => {\r\n              console.log(\"Error in deleteLists!\");\r\n            });\r\n          }\r\n        });\r\n\r\n        axios.delete(\"lists/\" + id).catch(err => {\r\n          console.log(\"Error in deleteList!\");\r\n        });\r\n      }\r\n    },\r\n    renameList: {\r\n      reducer(state, action) {\r\n        const { id, title } = action.payload;\r\n\r\n        state[id].title = title;\r\n\r\n        const data = {\r\n          title: title\r\n        };\r\n        axios.put(\"lists/\" + id, data).catch(err => {\r\n          console.log(\"Error in renameList!\");\r\n        });\r\n      },\r\n      prepare(id, title) {\r\n        return {\r\n          payload: { id: id, title: title }\r\n        };\r\n      }\r\n    },\r\n    moveList: {\r\n      reducer(state, action) {\r\n        const { listId, newPosition, newBoardId } = action.payload;\r\n        console.log(newPosition);\r\n\r\n        let orderedLists = [];\r\n        Object.keys(state).map(key =>\r\n          state[key].boardId === newBoardId\r\n            ? orderedLists.push([state[key], key])\r\n            : null\r\n        );\r\n        orderedLists.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        if (state[listId].boardId !== newBoardId) {\r\n          state[listId].position = orderedLists.length;\r\n          state[listId].boardId = newBoardId;\r\n          orderedLists.push([state[listId], listId]);\r\n        }\r\n\r\n        if (state[listId].position < orderedLists.length - 1)\r\n          for (let i = state[listId].position + 1; i <= newPosition; i++)\r\n            orderedLists[i][0].position -= 1;\r\n        else\r\n          for (let i = newPosition; i < state[listId].position; i++)\r\n            orderedLists[i][0].position += 1;\r\n        state[listId].position = newPosition;\r\n\r\n        orderedLists.forEach(\r\n          listArray => (state[listArray[1]].position = listArray[0].position)\r\n        );\r\n\r\n        Object.keys(state).map(key => {\r\n          const data = {\r\n            boardId: state[key].boardId,\r\n            title: state[key].title,\r\n            position: state[key].position\r\n          };\r\n          axios.put(\"lists/\" + state[key].id, data).catch(err => {\r\n            console.log(\"Error in CreateBoard!\");\r\n          });\r\n        });\r\n      },\r\n      prepare(listId, newPosition, newBoardId) {\r\n        return { payload: { listId, newPosition, newBoardId } };\r\n      }\r\n    },\r\n    reorderLists: {\r\n      reducer(state, action) {\r\n        const { id, boardId, oldPosition, newPosition } = action.payload;\r\n\r\n        let orderedLists = [];\r\n        Object.keys(state).map(key => {\r\n          if (state[key].boardId === boardId)\r\n            orderedLists.push([state[key], key]);\r\n        });\r\n        orderedLists.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        const [removed] = orderedLists.splice(oldPosition, 1);\r\n        orderedLists.splice(newPosition, 0, removed);\r\n        orderedLists.forEach((listArray, i) => {\r\n          state[listArray[1]].position = i;\r\n        });\r\n\r\n        Object.keys(state).map(key => {\r\n          if (state[key].boardId === boardId) {\r\n            const data = {\r\n              boardId: state[key].boardId,\r\n              title: state[key].title,\r\n              position: state[key].position\r\n            };\r\n            axios.put(\"lists/\" + state[key].id, data).catch(err => {\r\n              console.log(\"Error in reorderLists!\");\r\n            });\r\n          }\r\n        });\r\n      },\r\n      prepare(id, boardId, oldPosition, newPosition) {\r\n        return { payload: { id, boardId, oldPosition, newPosition } };\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  addList,\r\n  deleteList,\r\n  renameList,\r\n  moveList,\r\n  reorderLists\r\n} = listsSlice.actions;\r\n\r\nexport default listsSlice.reducer;\r\n\r\nexport const fetchLists = () => dispatch => {\r\n  axios.get(\"lists\").then(res => {\r\n    res.data.map(list => {\r\n      dispatch(\r\n        addList(list.owner, list._id, list.boardId, list.title, list.position)\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nexport const postList = (boardId, title, position) => dispatch => {\r\n  const data = {\r\n    boardId: boardId,\r\n    title: title,\r\n    position: position\r\n  };\r\n  axios\r\n    .post(\"lists\", data)\r\n    .then(res => {\r\n      dispatch(\r\n        addList(res.data.owner, res.data.list._id, boardId, title, position)\r\n      );\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Error in CreateBoard!\");\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { Menu, Modal } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteList } from \"../lists/listsSlice\";\r\nconst { confirm } = Modal;\r\n\r\nconst menuStyle = {\r\n  width: \"304px\",\r\n  overflow: \"hidden\"\r\n};\r\n\r\nconst dividerStyle = {\r\n  margin: \"4px 0\"\r\n};\r\n\r\nconst headerStyle = {\r\n  display: \"block\",\r\n  textAlign: \"center\",\r\n  height: \"40px\",\r\n  color: \"#172b4d\"\r\n};\r\n\r\nconst headerTitle = {\r\n  display: \"block\",\r\n  lineHeight: \"40px\",\r\n  margin: \"0 12px\",\r\n  overflow: \"hidden\",\r\n  padding: \"0 32px\",\r\n  textOverflow: \"ellipsis\",\r\n  whiteSpace: \"nowrap\"\r\n};\r\n\r\nconst menuGroupStyle = {\r\n  overflowX: \"hidden\",\r\n  overflowY: \"auto\",\r\n  padding: \"0 12px 12px\"\r\n};\r\n\r\nconst menuItemStyle = {\r\n  cursor: \"pointer\",\r\n  display: \"block\",\r\n  fontWeight: \"400\",\r\n  padding: \"6px 12px\",\r\n  margin: \"0 -12px\",\r\n  textDecoration: \"none\",\r\n  color: \"#172b4d\"\r\n};\r\n\r\nconst showConfirm = (listId, deleteList) => {\r\n  confirm({\r\n    content: \"Are you sure you want to delete this list?\",\r\n    onOk() {\r\n      deleteList(listId);\r\n    },\r\n    onCancel() {}\r\n  });\r\n};\r\n\r\nconst handleClick = (\r\n  e,\r\n  setIsVisible,\r\n  setShowingMoveList,\r\n  listId,\r\n  deleteList\r\n) => {\r\n  if (e.key === \"1\") setShowingMoveList(true);\r\n  else if (e.key === \"2\") {\r\n    showConfirm(listId, deleteList);\r\n  }\r\n};\r\n\r\nconst ListOptionsMenuMain = ({\r\n  setIsVisible,\r\n  setShowingMoveList,\r\n  listId,\r\n  deleteList\r\n}) => {\r\n  return (\r\n    <Menu\r\n      onClick={e =>\r\n        handleClick(e, setIsVisible, setShowingMoveList, listId, deleteList)\r\n      }\r\n      style={menuStyle}\r\n    >\r\n      <Menu.Item style={headerStyle}>\r\n        <span style={headerTitle}>List Actions</span>\r\n      </Menu.Item>\r\n      <Menu.Divider style={dividerStyle} />\r\n      <Menu.ItemGroup style={menuGroupStyle}>\r\n        <Menu.Item key=\"1\" style={menuItemStyle}>\r\n          Move List...\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" style={menuItemStyle}>\r\n          Archive This List\r\n        </Menu.Item>\r\n      </Menu.ItemGroup>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst mapDispatch = { deleteList };\r\n\r\nexport default connect(null, mapDispatch)(ListOptionsMenuMain);\r\n","export const getActiveBoard = (state) => { \r\n   return state[Object.keys(state).find(key => state[key].isActive === true)];\r\n}\r\n\r\nexport const getObjectById = (state, id) => { \r\n  return Object.keys(state).find(key => state[key].id === id);\r\n}\r\n\r\nexport const getObjectIds = (state) => {\r\n  return state.map(item => item.id);\r\n}\r\n\r\nexport const getTitle = (state, id) => { \r\n  return state[id].title;\r\n}\r\n\r\nexport const getId = (state) => {\r\n  return state.id;\r\n}\r\n\r\nexport const getPosition = (state) => {\r\n  return state.position;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Menu, Button, Select } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { moveList } from \"../lists/listsSlice\";\r\nimport { getActiveBoard, getTitle, getId, getPosition } from \"../../selectors/BoardSelectors\"\r\n\r\nconst { Option } = Select;\r\n\r\nconst menuStyle = {\r\n  width: \"304px\",\r\n  overflow: \"hidden\",\r\n  height: \"auto\"\r\n};\r\n\r\nconst dividerStyle = {\r\n  margin: \"4px 0\"\r\n};\r\n\r\nconst headerStyle = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  textAlign: \"center\",\r\n  justifyContent: \"space-between\",\r\n  height: \"40px\",\r\n  color: \"#172b4d\"\r\n};\r\n\r\nconst headerTitle = {\r\n  display: \"block\",\r\n  lineHeight: \"40px\",\r\n  margin: \"0 12px\",\r\n  overflow: \"hidden\",\r\n  padding: \"0 32px\",\r\n  textOverflow: \"ellipsis\",\r\n  whiteSpace: \"nowrap\"\r\n};\r\n\r\nconst buttonStyle = {\r\n  borderColor: \"transparent\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  display: \"block\",\r\n  height: \"auto\",\r\n  padding: \"10px 8px 10px 12px\"\r\n};\r\n\r\nconst selectStyle = {\r\n  left: 0,\r\n  margin: 0,\r\n  border: \"none\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst labelStyle = {\r\n  height: \"8px\",\r\n  margin: \"8px\",\r\n  padding: \"4px\",\r\n  fontSize: \"14px\",\r\n  fontWeight: 600\r\n};\r\n\r\nconst handleClick = (e, setIsVisible, setShowingMoveList) => {\r\n  if (e.key === \"1\") setIsVisible(true);\r\n  else if (e.key === \"3\") setShowingMoveList(true);\r\n};\r\n\r\nconst MoveListMenu = ({\r\n  setIsVisible,\r\n  setShowingMoveList,\r\n  listId,\r\n  boards,\r\n  lists,\r\n  moveList\r\n}) => {\r\n  const [selectedBoard, setSelectedBoard] = useState(getId(getActiveBoard(boards)));\r\n  const [selectedPosition, setSelectedPosition] = useState(getPosition(lists[listId]));\r\n\r\n  return (\r\n    <Menu\r\n      onClick={e => handleClick(e, setIsVisible, setShowingMoveList)}\r\n      style={menuStyle}\r\n    >\r\n      <Menu.Item style={headerStyle}>\r\n        <Button\r\n          onClick={() => setShowingMoveList(false)}\r\n          icon=\"left\"\r\n          style={buttonStyle}\r\n        />\r\n        <span style={headerTitle}>Move List</span>\r\n        <Button icon=\"close\" style={buttonStyle}/>\r\n      </Menu.Item>\r\n      <Menu.Divider style={dividerStyle} />\r\n      <div>\r\n        <div style={labelStyle}>Board: </div>\r\n        <Select\r\n          defaultValue={getActiveBoard(boards).title}\r\n          style={selectStyle}\r\n          onChange={value => setSelectedBoard(value)}\r\n        >\r\n          {Object.keys(boards).map(key => (\r\n            <Option value={getId(boards[key])} key={key}>\r\n              {boards[key].title}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <div style={labelStyle}>Position: </div>\r\n      <Select\r\n        defaultValue={listId}\r\n        style={selectStyle}\r\n        onChange={value => setSelectedPosition(value)}\r\n      >\r\n        {Object.keys(lists).map(key =>\r\n          lists[key].boardId === selectedBoard ? (\r\n            <Option value={getPosition(lists[key])} key={key}>\r\n              {getPosition(lists[key])}\r\n              {getPosition(lists[key]) === listId ? \" (current)\" : null}\r\n            </Option>\r\n          ) : null\r\n        )}\r\n      </Select>\r\n      <Menu.Item>\r\n        <Button\r\n          onClick={() => moveList(listId, selectedPosition, selectedBoard)}\r\n        >\r\n          Move\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  lists: state.lists\r\n});\r\n\r\nconst mapDispatch = { moveList };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(MoveListMenu);\r\n","import React from \"react\";\r\nimport ListOptionsMenuMain from \"./ListOptionsMenuMain\";\r\nimport MoveListMenu from \"./MoveListMenu\";\r\n\r\nconst ListOptionsMenu = ({\r\n  setIsVisible,\r\n  showingMoveList,\r\n  setShowingMoveList,\r\n  listId\r\n}) => {\r\n  if (showingMoveList)\r\n    return (\r\n      <MoveListMenu\r\n        setIsVisible={setIsVisible}\r\n        setShowingMoveList={setShowingMoveList}\r\n        listId={listId}\r\n      />\r\n    );\r\n  else\r\n    return (\r\n      <ListOptionsMenuMain\r\n        setIsVisible={setIsVisible}\r\n        setShowingMoveList={setShowingMoveList}\r\n        listId={listId}\r\n      />\r\n    );\r\n};\r\n\r\nexport default ListOptionsMenu;\r\n","import React, { useState } from \"react\";\r\nimport { Dropdown, Icon } from \"antd\";\r\nimport ListOptionsMenu from \"../menus/ListOptionsMenu\";\r\n\r\nconst ellipsisStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  float: \"right\"\r\n};\r\n\r\nconst ListOptionsDropDown = ({ setIsVisible, listId }) => {\r\n  const [showingMoveList, setShowingMoveList] = useState(false);\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={\r\n        <ListOptionsMenu\r\n          setIsVisible={setIsVisible}\r\n          showingMoveList={showingMoveList}\r\n          setShowingMoveList={setShowingMoveList}\r\n          listId={listId}\r\n        />\r\n      }\r\n      trigger={[\"click\"]}\r\n      placement=\"bottomRight\"\r\n    >\r\n      <Icon type=\"ellipsis\" style={ellipsisStyle} />\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default ListOptionsDropDown;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Input } from \"antd\";\r\nimport { renameList } from \"./listsSlice\";\r\n\r\nconst inputStyle = {\r\n  maxHeight: \"162px\",\r\n  minHeight: \"20px\"\r\n};\r\n\r\nconst RenameListForm = ({ id, title, setFormVisible, renameList }) => {\r\n  const [listTitle, setListTitle] = useState(title);\r\n\r\n  const onChange = e => setListTitle(e.target.value);\r\n  return (\r\n    <Form\r\n      layout=\"inline\"\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        if (!listTitle.trim()) return;\r\n\r\n        renameList(id, listTitle);\r\n\r\n        setListTitle(\"\");\r\n        setFormVisible(false);\r\n      }}\r\n    >\r\n      <Form.Item style={{ width: \"100%\" }}>\r\n        <Input\r\n          style={inputStyle}\r\n          value={listTitle}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Enter a title for this list...\"\r\n          autoFocus={true}\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapDispatch = { renameList };\r\n\r\nexport default connect(null, mapDispatch)(RenameListForm);\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport CardList from \"../cards/CardList\";\r\nimport AddCardButton from \"../cards/AddCardButton\";\r\nimport ListOptionsDropDown from \"./ListOptionsDropDown\";\r\nimport { Card, Button } from \"antd\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport RenameListForm from \"./RenameListForm\";\r\n\r\nconst listWrapper = {\r\n  width: \"272px\",\r\n  height: \"100%\",\r\n  margin: \"0 4px\",\r\n  boxSizing: \"border-box\",\r\n  display: \"inline-block\",\r\n  verticalAlign: \"top\"\r\n};\r\n\r\nconst cardStyle = {\r\n  width: \"272px\",\r\n  backgroundColor: \"#ebecf0\",\r\n  marginLeft: \"8px\",\r\n  borderRadius: \"3px\",\r\n  boxSizing: \"border-box\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  maxHeight: \"100%\",\r\n  overflowY: \"hidden\"\r\n};\r\n\r\nconst listContent = {};\r\n\r\nconst listHeader = {\r\n  flex: \"0 0 auto\",\r\n  padding: \"10px 8px\",\r\n  position: \"relative\",\r\n  minHeight: \"20px\",\r\n  fontWeight: 600\r\n};\r\n\r\nconst buttonStyle = {\r\n  minWidth: \"100%\",\r\n  position: \"relative\",\r\n  padding: \"4px 0px\",\r\n  display: \"flex\",\r\n  justify: \"space-between\"\r\n};\r\n\r\nconst ellipsisStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  float: \"right\"\r\n};\r\n\r\nconst titleStyle = {\r\n  backgroundColor: \"transparent\",\r\n  fontWeight: \"700\",\r\n  lineHeight: \"32px\",\r\n  padding: 0,\r\n  textDecoration: \"none\",\r\n  maxWidth: \"calc(100% - 24px)\",\r\n  borderColor: \"transparent\",\r\n  boxShadow: \"none\"\r\n};\r\n\r\nconst List = ({ id, title, position, cards }) => {\r\n  const wrapperRef = useRef(null);\r\n  const [isTopVisible, setIsTopVisible] = useState(false);\r\n  const [isBotVisible, setIsBotVisible] = useState(false);\r\n  const [isFormVisible, setFormVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = event => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setIsTopVisible(false);\r\n      setIsBotVisible(false);\r\n      setFormVisible(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Draggable key={id} draggableId={id} index={position} type=\"LIST\">\r\n      {(provided1, snapshot) => (\r\n        <div\r\n          ref={provided1.innerRef}\r\n          {...provided1.draggableProps}\r\n          {...provided1.dragHandleProps}\r\n        >\r\n          <Droppable droppableId={id} type=\"CARD\">\r\n            {(provided, snapshot) => (\r\n              <div ref={provided.innerRef}>\r\n                <div style={listWrapper} ref={wrapperRef}>\r\n                  <Card style={cardStyle} bodyStyle={{ padding: \"0 4px\" }}>\r\n                    <div style={listContent}>\r\n                      <div style={listHeader}>\r\n                        {isFormVisible ? (\r\n                          <RenameListForm\r\n                            id={id}\r\n                            title={title}\r\n                            setFormVisible={setFormVisible}\r\n                          />\r\n                        ) : (\r\n                          <Button\r\n                            style={titleStyle}\r\n                            onClick={() => setFormVisible(true)}\r\n                          >\r\n                            {title}\r\n                          </Button>\r\n                        )}\r\n                        <ListOptionsDropDown\r\n                          style={ellipsisStyle}\r\n                          setIsVisible={setIsTopVisible}\r\n                          listId={id}\r\n                        />\r\n                      </div>\r\n                      <div style={buttonStyle}>\r\n                        <AddCardButton\r\n                          listId={id}\r\n                          isVisible={isTopVisible}\r\n                          setIsVisible={setIsTopVisible}\r\n                          fromDropDown={true}\r\n                        >\r\n                          Add another card\r\n                        </AddCardButton>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          zIndex: 10,\r\n                          maxHeight: \"80vh\",\r\n                          overflowY: \"scroll\"\r\n                        }}\r\n                      >\r\n                        <CardList cards={cards} />\r\n                      </div>\r\n                      <div style={buttonStyle}>\r\n                        <AddCardButton\r\n                          listId={id}\r\n                          isVisible={isBotVisible}\r\n                          setIsVisible={setIsBotVisible}\r\n                          fromDropDown={false}\r\n                        >\r\n                          Add another card\r\n                        </AddCardButton>\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          {provided1.placeholder}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postList } from \"./listsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { getNumLists } from \"../../selectors/ListSelectors\";\r\n\r\nconst buttonStyle = {\r\n  marginLeft: \"8px\",\r\n  minHeight: \"38px\",\r\n  maxHeight: \"38px\",\r\n  backgroundColor: \"hsla(0, 0%, 100%, .24)\",\r\n  color: \"white\",\r\n  borderColor: \"transparent\",\r\n  width: \"272px\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  maxWidth: \"272px\"\r\n};\r\n\r\nconst formStyle = {\r\n  marginLeft: \"8px\"\r\n};\r\n\r\nconst mapDispatch = { postList };\r\n\r\nconst AddListButton = ({ lists, postList, boardId }) => {\r\n  const [showingInput, setShowingInput] = useState(false);\r\n  const [listTitle, setListTitle] = useState(\"\");\r\n\r\n  const onChange = e => setListTitle(e.target.value);\r\n\r\n  if (showingInput)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!listTitle.trim()) return;\r\n\r\n          postList(boardId, listTitle, getNumLists(lists, boardId));\r\n\r\n          setListTitle(\"\");\r\n          setShowingInput(false);\r\n        }}\r\n        style={formStyle}\r\n      >\r\n        <Form.Item>\r\n          <Input\r\n            value={listTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a list title...\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" style={buttonStyle}>\r\n            Add List\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else\r\n    return (\r\n      <Button\r\n        onClick={() => setShowingInput(true)}\r\n        style={buttonStyle}\r\n        icon=\"plus\"\r\n      >\r\n        Add another list\r\n      </Button>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(AddListButton);\r\n","export const getNumLists = (state, boardId) => {\r\n  return Object.values(state).filter(list => list.boardId === boardId).length;\r\n};\r\n\r\nexport const getPosition = (state, listId) => {\r\n  return state[listId].position;\r\n}","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport List from \"./List\";\r\nimport AddListButton from \"./AddListButton\";\r\nimport { fetchLists } from \"./listsSlice\";\r\nimport { fetchCards } from \"../cards/cardsSlice\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst scrollingWrapper = {\r\n  display: \"flex\",\r\n  overflowX: \"auto\",\r\n  flexWrap: \"nowrap\",\r\n  height: \"calc(100vh - 45px)\"\r\n};\r\n\r\nconst ListList = ({ fetchLists, fetchCards, boardId, lists, cards }) => {\r\n  useEffect(() => {\r\n    fetchLists();\r\n    fetchCards();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={scrollingWrapper}>\r\n      {lists\r\n        ? Object.values(lists)\r\n            .sort((a, b) => a.position - b.position)\r\n            .map((list, i) => (\r\n              <List\r\n                key={list.id}\r\n                {...list}\r\n                cards={Object.values(cards).filter(\r\n                  card => card.listId === list.id\r\n                )}\r\n              />\r\n            ))\r\n        : null}\r\n      <AddListButton boardId={boardId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.cards\r\n});\r\n\r\nconst mapDispatch = { fetchLists, fetchCards };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(ListList);\r\n","import { createSlice } from \"redux-starter-kit\";\r\nimport axios from \"axios\";\r\n\r\nconst boardsSlice = createSlice({\r\n  name: \"boards\",\r\n  initialState: {},\r\n  reducers: {\r\n    addBoard: {\r\n      reducer(state, action) {\r\n        const { id, owner, title, isPrivate, isActive } = action.payload;\r\n        state[id] = { id, owner, title, isPrivate, isActive };\r\n      },\r\n      prepare(id, owner, title, isPrivate, isActive) {\r\n        return { payload: { id, owner, title, isPrivate, isActive } };\r\n      }\r\n    },\r\n    deleteBoard: {\r\n      reducer(state, action) {\r\n        const id = action.payload;\r\n        delete state[id];\r\n\r\n        axios.delete(\"boards/\" + id).catch(err => {\r\n          console.log(\"Error in deleteBoard!\");\r\n        });\r\n      }\r\n    },\r\n    renameBoard: {\r\n      reducer(state, action) {\r\n        const { id, title } = action.payload;\r\n\r\n        state[id].title = title;\r\n\r\n        const data = {\r\n          title: state[id].title\r\n        };\r\n        axios.put(\"boards/\" + id, data).catch(err => {\r\n          console.log(\"Error in renameBoard!\");\r\n        });\r\n      },\r\n      prepare(id, title) {\r\n        return {\r\n          payload: { id: id, title: title }\r\n        };\r\n      }\r\n    },\r\n    setActive: {\r\n      reducer(state, action) {\r\n        Object.keys(state).forEach(key => {\r\n          if (state[key].isActive === true) state[key].isActive = false;\r\n        });\r\n        state[action.payload.id].isActive = action.payload.isActive;\r\n      },\r\n      prepare(id, isActive) {\r\n        return { payload: { id, isActive } };\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  addBoard,\r\n  deleteBoard,\r\n  renameBoard,\r\n  setActive\r\n} = boardsSlice.actions;\r\n\r\nexport default boardsSlice.reducer;\r\n\r\nexport const postBoard = (title, isPrivate, isActive) => dispatch => {\r\n  const data = {\r\n    title: title,\r\n    isPrivate: isPrivate,\r\n    isActive: isActive\r\n  };\r\n\r\n  axios\r\n    .post(\"boards\", data)\r\n    .then(res => {\r\n      dispatch(\r\n        addBoard(res.data.board._id, res.data.board.owner, title, true, false)\r\n      );\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Error in CreateBoard!\");\r\n    });\r\n};\r\n\r\nexport const fetchBoards = () => dispatch => {\r\n  axios.get(\"boards\").then(res => {\r\n    res.data.map(board => {\r\n      dispatch(\r\n        addBoard(\r\n          board._id,\r\n          board.owner,\r\n          board.title,\r\n          board.isPrivate,\r\n          board.isActive\r\n        )\r\n      );\r\n    });\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"antd\";\r\nimport { deleteBoard } from \"./boardsSlice\";\r\nimport { connect } from \"react-redux\";\r\nconst { confirm } = Modal;\r\n\r\nconst buttonStyle = {\r\n  color: \"white\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  float: \"right\",\r\n  height: \"32px\",\r\n  width: \"auto\",\r\n  borderColor: \"transparent\",\r\n  borderRadius: \"3px\",\r\n  lineHeight: \"32px\",\r\n  margin: \"0 4px 4px 0\",\r\n  backgroundColor: \"hsla(0,0%,100%, .24)\"\r\n};\r\n\r\nconst showConfirm = (boardId, deleteBoard) => {\r\n  confirm({\r\n    content: \"Are you sure you want to delete this board?\",\r\n    onOk() {\r\n      showReallyConfirm(boardId, deleteBoard);\r\n    },\r\n    onCancel() {}\r\n  });\r\n};\r\n\r\nconst showReallyConfirm = (boardId, deleteBoard) => {\r\n  confirm({\r\n    content: \"Are you really sure you want to delete this board?\",\r\n    okText: \"Cancel\",\r\n    onOk() {},\r\n    cancelText: \"Ok\",\r\n    onCancel() {\r\n      deleteBoard(boardId);\r\n    }\r\n  });\r\n};\r\n\r\nconst DeleteBoardButton = ({ id, deleteBoard }) => {\r\n  return (\r\n    <Button\r\n      style={buttonStyle}\r\n      onClick={() => showConfirm(id, deleteBoard)}\r\n    >\r\n      Archive\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst mapDispatch = { deleteBoard };\r\n\r\nexport default connect(null, mapDispatch)(DeleteBoardButton);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Input } from \"antd\";\r\nimport { renameBoard } from \"./boardsSlice\";\r\n\r\nconst inputStyle = {\r\n  maxHeight: \"162px\",\r\n  minHeight: \"20px\"\r\n};\r\n\r\nconst RenameBoardForm = ({ id, title, setFormVisible, renameBoard }) => {\r\n  const [boardTitle, setBoardTitle] = useState(title);\r\n\r\n  const onChange = e => setBoardTitle(e.target.value);\r\n  return (\r\n    <Form\r\n      layout=\"inline\"\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        if (!boardTitle.trim()) return;\r\n\r\n        renameBoard(id, boardTitle);\r\n\r\n        setBoardTitle(\"\");\r\n        setFormVisible(false);\r\n      }}\r\n    >\r\n      <Form.Item style={{ width: \"100%\" }}>\r\n        <Input\r\n          style={inputStyle}\r\n          value={boardTitle}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Enter a title for this board...\"\r\n          autoFocus={true}\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapDispatch = { renameBoard };\r\n\r\nexport default connect(null, mapDispatch)(RenameBoardForm);\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport DeleteBoardButton from \"./DeleteBoardButton\";\r\nimport RenameBoardForm from \"./RenameBoardForm\";\r\n\r\nconst headerStyle = {\r\n  backgroundColor: \"rgba(0,0,0,.24)\",\r\n  height: \"auto\",\r\n  padding: \"8px 4px 4px 8px\",\r\n  position: \"relative\",\r\n  display: \"block\",\r\n  color: \"white\"\r\n};\r\n\r\nconst titleStyle = {\r\n  backgroundColor: \"transparent\",\r\n  fontSize: \"18px\",\r\n  fontWeight: \"700\",\r\n  lineHeight: \"32px\",\r\n  padding: 0,\r\n  textDecoration: \"none\",\r\n  maxWidth: \"calc(100% - 24px)\",\r\n  overflow: \"hidden\",\r\n  textOverflow: \"ellipsis\",\r\n  whiteSpace: \"nowrap\",\r\n  height: \"32px\",\r\n  borderColor: \"transparent\"\r\n};\r\n\r\nconst BoardHeader = ({ id, boards }) => {\r\n  const [formVisible, setFormVisible] = useState(false);\r\n  const wrapperRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = event => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setFormVisible(false);\r\n    }\r\n  };\r\n\r\n  return boards[id] ? (\r\n    <div ref={wrapperRef} style={headerStyle}>\r\n      <Button\r\n        type=\"primary\"\r\n        style={titleStyle}\r\n        onClick={() => setFormVisible(true)}\r\n      >\r\n        {formVisible ? (\r\n          <RenameBoardForm\r\n            id={id}\r\n            title={boards[id].title}\r\n            setFormVisible={setFormVisible}\r\n          />\r\n        ) : (\r\n          boards[id].title\r\n        )}\r\n      </Button>\r\n      <DeleteBoardButton id={id} />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(BoardHeader);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ListList from \"../lists/ListList\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { reorderCards } from \"../cards/cardsSlice\";\r\nimport { reorderLists } from \"../lists/listsSlice\";\r\nimport BoardHeader from \"./BoardHeader\";\r\nimport { setActive } from \"./boardsSlice\";\r\n\r\nconst Board = ({ id, lists, boards, reorderCards, reorderLists, setActive }) => {\r\n  useEffect(() => {\r\n    if (boards && boards[id] && !boards[id].isActive)\r\n      setActive(id, true);\r\n  }, [boards]);\r\n\r\n  const onDragEnd = result => {\r\n    const { draggableId, type, source, destination } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (type === \"CARD\") {\r\n      console.log(\"I'm a card!\");\r\n      reorderCards(\r\n        draggableId,\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index\r\n      );\r\n    } else if (type === \"LIST\") {\r\n      console.log(\"I'm a list!\");\r\n      reorderLists(\r\n        draggableId,\r\n        source.droppableId,\r\n        source.index,\r\n        destination.index\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BoardHeader id={id}/>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId={id} type=\"LIST\" direction=\"horizontal\">\r\n          {(provided, snapshot) => (\r\n            <div ref={provided.innerRef}>\r\n              <ListList\r\n                boardId={id}\r\n                lists={Object.values(lists).filter(list => list.boardId === id)}\r\n              />\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists,\r\n  boards: state.boards,\r\n});\r\n\r\nconst mapDispatch = { reorderCards, reorderLists, setActive };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(Board);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postBoard } from \"./boardsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst buttonStyle = {\r\n  marginRight: \"8px\",\r\n  marginBottom: \"8px\",\r\n  backgroundColor: \"#97a0af\",\r\n  height: \"80px\",\r\n  width: \"100%\",\r\n  fontSize: \"16px\",\r\n  fontWeight: 700,\r\n  color: \"white\",\r\n  borderColor: \"transparent\"\r\n};\r\n\r\nconst formStyle = {\r\n  marginLeft: \"8px\"\r\n};\r\n\r\nconst mapDispatch = { postBoard };\r\n\r\nconst AddBoardButton = ({ postBoard }) => {\r\n  const [showingInput, setShowingInput] = useState(false);\r\n  const [boardTitle, setBoardTitle] = useState(\"\");\r\n\r\n  const onChange = e => setBoardTitle(e.target.value);\r\n\r\n  if (showingInput)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!boardTitle.trim()) return;\r\n\r\n          postBoard(boardTitle, true, false);\r\n         \r\n          setBoardTitle(\"\");\r\n          setShowingInput(false);\r\n        }}\r\n        style={formStyle}\r\n      >\r\n        <Form.Item>\r\n          <Input\r\n            value={boardTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a board title...\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" style={buttonStyle}>\r\n            Add Board\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else\r\n    return (\r\n      <Button onClick={() => setShowingInput(true)} style={buttonStyle}>\r\n        Create new board\r\n      </Button>\r\n    );\r\n};\r\n\r\nexport default connect(null, mapDispatch)(AddBoardButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActive } from \"./boardsSlice\";\r\nimport { Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DeleteBoardButton from \"./DeleteBoardButton\";\r\n\r\nconst buttonStyle = {\r\n  backgroundColor: \"rgb(81, 152, 57)\",\r\n  height: \"80px\",\r\n  width: \"100%\",\r\n  fontSize: \"16px\",\r\n  fontWeight: 700,\r\n  color: \"white\",\r\n  display: \"inline-block\",\r\n  overflow: \"hidden\",\r\n  wordWrap: \"break-word\",\r\n  flex: \"0 0 auto\",\r\n  borderColor: \"transparent\"\r\n};\r\n\r\nconst mapDispatch = { setActive };\r\n\r\nconst BoardButton = ({ id, title, isPrivate, setActive }) => {\r\n  return (\r\n    <Link to={\"/user/boards/\" + id}>\r\n      <Button style={buttonStyle} onClick={() => setActive(id, true)}>\r\n        {title}\r\n      </Button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default connect(null, mapDispatch)(BoardButton);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon } from \"antd\";\r\nimport AddBoardButton from \"./AddBoardButton\";\r\nimport BoardButton from \"./BoardButton\";\r\nimport axios from \"axios\";\r\nimport { fetchBoards } from \"./boardsSlice\";\r\n\r\nconst headerStyle = {\r\n  color: \"white\",\r\n  fontSize: \"24px\",\r\n  lineHeight: \"20px\",\r\n  fontWeight: 400\r\n};\r\n\r\nconst buttonContainerStyle = {\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  flexGrow: 1,\r\n  minHeight: \"100%\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst buttonStyle = {\r\n  width: \"calc(50% - 4px)\",\r\n  marginRight: \"4px\",\r\n  marginBottom: \"4px\"\r\n};\r\n\r\nconst BoardList = ({ boards, user, fetchBoards }) => {\r\n  useEffect(() => {\r\n    fetchBoards();\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p style={headerStyle}>\r\n          <Icon type=\"user\" /> Personal Boards\r\n        </p>\r\n      </div>\r\n      <div style={buttonContainerStyle}>\r\n        {Object.values(boards).map((board, i) => (\r\n          <div style={buttonStyle} key={i + board.id}>\r\n            <BoardButton key={board.id} {...board} />\r\n          </div>\r\n        ))}\r\n        <div style={buttonStyle}>\r\n          <AddBoardButton />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatch = { fetchBoards };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(BoardList);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Board from \"../boards/Board\";\r\nimport BoardList from \"../boards/BoardList\";\r\n\r\nconst LoggedInRouter = () => {\r\n  return (\r\n    <main>\r\n        <Switch basename=\"/\">\r\n          <Route\r\n            exact\r\n            path=\"/user/boards/:id\"\r\n            render={props => <Board id={props.match.params.id} />}\r\n          />\r\n          <Route exact path=\"/user/boards\" render={() => <BoardList />} />\r\n          <Route path=\"/\" render={() => <Redirect to=\"/user/boards\" />} />\r\n        </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoggedInRouter;\r\n","import React from \"react\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst formStyle = {\r\n  borderRadius: \"3px\",\r\n  backgroundColor: \"white\",\r\n  minWidth: \"250px\",\r\n  width: \"20vw\",\r\n  margin: \"auto\", \r\n  marginTop: \"20vh\",\r\n  padding: \"4px 8px\"\r\n};\r\n\r\nconst LoginFormComponent = ({ onSubmit, form }) => {\r\n  const { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} className=\"login-form\" style={formStyle}>\r\n      <Form.Item>\r\n        <h1\r\n          style={{ textAlign: \"center\", marginTop: \"4px\", marginBottom: \"0px\" }}\r\n        >\r\n          Log in to Trelloc\r\n        </h1>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"email\", {\r\n          rules: [{ required: true, message: \"Please input your email!\" }]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Email\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"password\", {\r\n          rules: [{ required: true, message: \"Please input your password!\" }]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Link to={\"/user/forgotpass/\"} style={{ marginRight: \"4px\" }}>\r\n          Forgot password\r\n        </Link>\r\n        <Link to={\"/user/register/\"} style={{ marginLeft: \"4px\" }}>\r\n          Register\r\n        </Link>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Log in\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst LoginForm = Form.create({ name: \"login_form\" })(LoginFormComponent);\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"./userSlice\";\r\n\r\nconst LoginFormWrapper = ({ login }) => {\r\n  const [formRef, setFormRef] = useState(null);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    formRef.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      else {\r\n        login(values.email, values.password);\r\n        formRef.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveFormRef = useCallback(node => {\r\n    if (node !== null) {\r\n      setFormRef(node);\r\n    }\r\n  }, []);\r\n\r\n  return <LoginForm ref={saveFormRef} onSubmit={handleSubmit} />;\r\n};\r\n\r\nconst mapDispatch = { login };\r\n\r\nexport default connect(null, mapDispatch)(LoginFormWrapper);\r\n","import React from \"react\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst formStyle = {\r\n  borderRadius: \"3px\",\r\n  backgroundColor: \"white\",\r\n  minWidth: \"250px\",\r\n  width: \"20vw\",\r\n  margin: \"auto\",\r\n  marginTop: \"20vh\",\r\n  padding: \"4px 8px\"\r\n};\r\n\r\nconst inputStyle = {\r\n  marginBottom: \"4px\",\r\n  marginTop: \"4px\"\r\n}\r\n\r\nconst RegistrationFormComponent = ({ onSubmit, form }) => {\r\n  const { getFieldDecorator } = form;\r\n\r\n  const compareToFirstPassword = (rule, value, callback) => {\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Passwords must match!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  const validateToNextPassword = (rule, value, callback) => {\r\n    if (value) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} className=\"login-form\" style={formStyle}>\r\n      <Form.Item>\r\n        <h1\r\n          style={{ textAlign: \"center\", marginTop: \"4px\", marginBottom: \"0px\" }}\r\n        >\r\n          Register for a Trelloc Account\r\n        </h1>\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"username\", {\r\n          rules: [{ required: true, message: \"Please input your username!\" }]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: \"rgba(0, 0, 0, .25\" }} />}\r\n            placeholder=\"Username\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"email\", {\r\n          rules: [\r\n            { type: \"email\", message: \"Please input a valid email!\" },\r\n            { required: true, message: \"Please input your email!\" }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"mail\" style={{ color: \"rgba(0, 0, 0, .25\" }} />}\r\n            placeholder=\"Email\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"password\", {\r\n          rules: [\r\n            { required: true, message: \"Please input your password!\" },\r\n            { validator: validateToNextPassword }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"confirm password\", {\r\n          rules: [\r\n            { required: true, message: \"Please confirm your password!\" },\r\n            {\r\n              validator: compareToFirstPassword\r\n            }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Register\r\n        </Button>\r\n        <Link to={\"/user/login\"} style={{marginLeft: \"8px\"}}> or Log in</Link>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst RegistrationForm = Form.create({ name: \"registration_form\" })(\r\n  RegistrationFormComponent\r\n);\r\n\r\nexport default RegistrationForm;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport RegistrationForm from \"./RegistrationForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"./userSlice\";\r\n\r\nconst RegistrationFormWrapper = ({ register }) => {\r\n  const [formRef, setFormRef] = useState(null);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    formRef.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      } else {\r\n        register(values.username, values.email, values.password);\r\n        formRef.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveFormRef = useCallback(node => {\r\n    if (node !== null) {\r\n      setFormRef(node);\r\n    }\r\n  }, []);\r\n\r\n  return <RegistrationForm ref={saveFormRef} onSubmit={handleSubmit} />;\r\n};\r\n\r\nconst mapDispatch = { register };\r\n\r\nexport default connect(null, mapDispatch)(RegistrationFormWrapper);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport LoginFormWrapper from \"../user/LoginFormWrapper\"\r\nimport RegistrationFormWrapper from \"../user/RegistrationFormWrapper\"\r\n\r\nconst LoggedOutRouter = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/user/login\" render={() => <LoginFormWrapper/>}/>\r\n        <Route exact path=\"/user/register\" render={() => <RegistrationFormWrapper/>}/>\r\n        <Route path=\"/\" render={() => <RegistrationFormWrapper/>}/>\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoggedOutRouter;\r\n","export const isLoggedIn = (state) => {\r\n    return state[0] && state[0].token ? true : false;\r\n}\r\n\r\nexport const getAuthToken = (state) => {\r\n    return state[0] ? state[0].token : null;\r\n}","import React, { useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport Header from \"../features/header/Header\";\r\nimport { Layout } from \"antd\";\r\nimport LoggedInRouter from \"../features/router/LoggedInRouter\";\r\nimport LoggedOutRouter from \"../features/router/LoggedOutRouter\";\r\nimport { isLoggedIn } from \"../selectors/UserSelectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUserDetails } from \"../features/user/userSlice\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { fetchBoards } from \"../features/boards/boardsSlice\";\r\n\r\nconst layoutStyle = {\r\n  backgroundColor: \"black\",\r\n  minHeight: \"100vh\",\r\n  fontFamily: \"Helvetica\",\r\n  fontSize: \"14px\",\r\n  fontWeight: 400,\r\n  lineHeight: \"20px\"\r\n};\r\n\r\nconst contentStyle = {\r\n  padding: \"4px\",\r\n  backgroundColor: \"black\",\r\n  height: \"100%\"\r\n};\r\n\r\nfunction App({ user, fetchUserDetails, fetchBoards }) {\r\n  useEffect(() => {\r\n    const cookies = new Cookies();\r\n    const token = cookies.get(\"trelloc token\");\r\n\r\n    axios.defaults.baseURL = \"https://warm-sea-05824.herokuapp.com/api/\";\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\r\n    axios.defaults.headers.post[\"Content-Type\"] =\r\n      \"application/x-www-form-urlencoded\";\r\n\r\n    fetchUserDetails(token);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn(user)) fetchBoards();\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout style={layoutStyle}>\r\n        <Header />\r\n        <Layout.Content style={contentStyle}>\r\n          {isLoggedIn(user) ? <LoggedInRouter /> : <LoggedOutRouter />}\r\n        </Layout.Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatch = { fetchUserDetails, fetchBoards };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport cardsReducer from \"../features/cards/cardsSlice\";\r\nimport listsReducer from \"../features/lists/listsSlice\";\r\nimport boardsReducer from \"../features/boards/boardsSlice\";\r\nimport userReducer from \"../features/user/userSlice\";\r\n\r\nexport default combineReducers({\r\n  cards: cardsReducer,\r\n  lists: listsReducer,\r\n  boards: boardsReducer,\r\n  user: userReducer\r\n});\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { configureStore } from \"redux-starter-kit\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}